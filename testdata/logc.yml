addrs: &addrs
  - http://127.0.0.1:9200/logc-${LOGCENV}-

mapping: &mapping
  properties:
    at: { type: date }
    duration: { type: float }
    host: { type: keyword }
    method: { type: keyword }
    path: { type: text, fields: { raw: { type: keyword } }}
    query: { type: object }
    rawQuery: { type: keyword }
    status: { type: keyword }
    req_body: { type: text }
    res_body: { type: text }
    req_body_size: { type: integer }
    res_body_size: { type: integer }
    ip: { type: ip }
    refer: { type: text }
    agent: { type: text }
    proto: { type: keyword }
    # session: sess
  dynamic_templates:
    - query:
        path_match: "query.*"
        mapping: { type: text, fields: { raw: { type: keyword } } }


name: test     # name used for alarm
mailer: mailer://smtp.qq.com:25/?user=小美<xiaomei-go@qq.com>&pass=zjsbosjlhgugechh
keepers: [  ]
batch:
  size: 102400 # how many bytes to read once
  wait: 3s     # how long to wait to full fill batch.size
rotate:
  time: "33 8 1 * * *" # cron time pattern to execute rotate.cmd
  cmd:  [ logrotate, logrotate.conf ]
files:
  app.log: # file path, required, either relative or absolute is ok.
    # collector id, it will be use as part of offset file path, so it should be path safe.
    # make sure different collectors of the same file has unique id.
    es:
      "@type": elasticsearch
      addrs: *addrs

      # index can be time series index or regular index.
      # index doesn't contain "<" and ">" acts as a regular index.
      # in time series index, string between "<" and ">" acts as time layout.
      # see https://golang.org/pkg/time/#Parse for time layout format.
      index: app-log-<2006.01.02>
      mapping: *mapping

      ### the following fields is effective only when "index" field is a time series index. ###

      # field used to determine which time series index to write to.
      timeField: at
      # time layout to parse "timeField". (default: RFC3339)
      timeFormat: "2006-01-02T15:04:05Z0700"
      # the number of latest time series indices to keep. old indices will be deleted.
      # if <= 0 all indices will be kept.
      indexKeep: 100

      addTypeSuffix: true

  app.err:
    es:
      "@type": elasticsearch
      addrs: *addrs
      index: app-err-<2006.01.02>
      mapping: *mapping
      timeField: at
      addTypeSuffix: true

  consume.log:
    es:
      "@type": elasticsearch
      addrs: *addrs
      timeField: at
      addTypeSuffix: true
      index: consume-log
      mapping:
        properties:
          at: { type: date }
          data: { type: object }
